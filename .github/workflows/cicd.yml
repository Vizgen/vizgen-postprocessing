name: Main

on:
  push:
    branches: [ "develop", "VDOT-123"]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    # strategy:
    #   matrix:
    #     python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3

      # - name: Set up Python 3.10 # ${{ matrix.python-version }}
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.10' # ${{ matrix.python-version }}
      #     cache: 'pip' # caching pip dependencies

      # - name: Install Poetry
      #   uses: snok/install-poetry@v1
      #   with:
      #     version: 1.3.1

      # - name: Install package
      #   run: poetry install --no-interaction --no-root

      # - name: Test with pytest
      #   run: poetry run pytest tests/ --cov=pycounts --cov-report=xml

      # - name: Use Codecov to track coverage
      #   uses: codecov/codecov-action@v2
      #   with:
      #     files: ./coverage.xml   # coverage report

      # - name: Build documentation
      #   run: poetry run make html --directory docs/

      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install flake8 pytest
      #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # - name: Lint with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # - name: Test with pytest
      #   run: |
      #     pytest

  deploy:
    # Only run this job if the "build" job passes
    needs: build
    # Only run this job if new work is pushed to "develop"
    # if: github.even_name == 'push' && github.ref == 'refs/heads/main'

    runs-on: ubuntu-22.04
    concurrency: release

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python 3.10 # ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies

      # - name: Python Semantic Release
      #   uses: relekang/python-semantic-release@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     repository_username: __token__
      #     repository_password: ${{ secrets.PYPI_TOKEN }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel

      - name: Build package
        run: python setup.py bdist_wheel

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN_VPT }}
          repository_url: https://test.pypi.org/legacy/

      # - name: Test install from TestPyPI
      #   run: |
      #       pip install \
      #       --index-url https://test.pypi.org/simple/ \
      #       --extra-index-url https://pypi.org/simple \
      #       vpt

      # - name: Publish to PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     password: ${{ secrets.PYPI_API_TOKEN }}
